apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_static"
                abiFilters 'x86', 'armeabi-v7a', 'arm64-v8a'
            }
        }
        ndk {
            abiFilters 'x86', 'armeabi-v7a' , 'arm64-v8a'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    flatDir{
        dirs 'libs'
    }
    google()
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    kapt project(path: ':ejecta-v8:v8annotations')
    compile project(path: ':ejecta-v8:v8annotations')
}

task distributeDebug() {
    doFirst {
        delete "dist/debug"
        mkdir "dist/debug/jni"
        copy {
            from "build/intermediates/cmake/debug/obj"
            into "dist/debug/jni"
        }
    }
}

task distributeRelease {

    doFirst {
        /* println("LS")
        def list = []

        def dir = new File("ejecta-v8/build/intermediates/cmake/release/obj")
        dir.eachFileRecurse (FileType.FILES) { file ->
            list << file
        }
        list.each {
            println it.path
        } */
        delete "dist/release"
        mkdir "dist/release/jni"
        copy {
            from "build/intermediates/cmake/release/obj"
            into "dist/release/jni"
        }
    }
}

afterEvaluate {
    transformNativeLibsWithMergeJniLibsForDebug.finalizedBy distributeDebug
    transformNativeLibsWithMergeJniLibsForRelease.finalizedBy distributeRelease
}
